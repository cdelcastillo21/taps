{
  "checkpointable": false,
  "name": "{{ app.name }}",
  "executionSystem": "{{ app.execution_system }}",
  "executionType": "CLI",
  "deploymentPath": "{{ username }}/apps/{{ app.name }}-{{ app.version }}",
  "deploymentSystem": "{{ app.deployment_system }}",
  "helpURI": "",
  "label": "{{ app.label }}",
  "shortDescription": "{{ app.description }}",
  "longDescription": "",
  "modules": [],
  "ontology": ["coreutils", "shell", "demo"],
  "parallelism": "SERIAL",
  "tags": [],
  "templatePath": "run.sh",
  "testPath": "test.sh",
  "version": "{{ app.version }}",
  "defaultMaxRunTime": "00:30:00",
  "inputs": [   {
    "id": "target_file",
    "value": {
      "visible": true,
      "required": false,
      "order": 2
    },
    "details": {
      "label": "Target file (optional)",
      "description": "Copied into job directory before command is executed"
    },
    "semantics": {
      "minCardinality": 0,
      "maxCardinality": 1,
      "ontology": []
    }
  }
],
  "parameters": [
    {
      "id": "command",
      "value": {
        "visible": true,
        "required": true,
        "type": "string",
        "order": 0,
        "default": ""
      },
      "details": {
        "label": "Command to execute",
        "description": "Must be avilable in PATH on host."
      },
      "semantics": {
        "minCardinality": 1,
        "maxCardinality": 1,
        "ontology": []
      }
    },
    {
      "id": "opts",
      "value": {
        "visible": true,
        "required": false,
        "type": "string",
        "order": 1,
        "default": ""
      },
      "details": {
        "label": "Command options",
        "description": "Options to pass to the command."
      },
      "semantics": {
        "minCardinality": 1,
        "maxCardinality": 1,
        "ontology": []
      }
    }
  ],
  "outputs": [
    {
      "id": "log",
      "value": {
        "order": 100,
        "default": "{{ app.name }}.log"
      },
      "details": {
        "label": "STDOUT and STDERR from the command"
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": []
      }
    }
  ]
}
